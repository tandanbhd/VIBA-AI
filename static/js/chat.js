<script>const chatContainer=document.getElementById('chat-container');const messageInput=document.getElementById('message-input');const sendButton=document.getElementById('send-button');const loadingIndicator=document.getElementById('loading-indicator');messageInput.addEventListener('input',()=>{messageInput.style.height='auto';messageInput.style.height=`${messageInput.scrollHeight}px`});let isVerified=!1;let currentEmployeeId=null;function addTimestamp(messageElement){const now=new Date();const timeString=now.toLocaleTimeString([],{hour:'2-digit',minute:'2-digit',hour12:!1});const timestampSpan=document.createElement('span');timestampSpan.classList.add('timestamp');timestampSpan.textContent=timeString;messageElement.appendChild(timestampSpan)}
function typeEffect(element,text,callback){let i=0;const speed=20;element.textContent='';chatContainer.scrollTop=chatContainer.scrollHeight;function typeCharacter(){if(i<text.length){element.textContent+=text.charAt(i);i++;chatContainer.scrollTop=chatContainer.scrollHeight;setTimeout(typeCharacter,speed)}else{addTimestamp(element);chatContainer.scrollTop=chatContainer.scrollHeight;if(callback){callback()}}}
typeCharacter()}
function addMessageToChat(text,sender,useTypingEffect=!1,callback){const messageDiv=document.createElement('div');messageDiv.classList.add('message',`${sender}-message`);messageDiv.textContent=' ';chatContainer.appendChild(messageDiv);if(sender==='user'){messageDiv.textContent=text;addTimestamp(messageDiv);chatContainer.scrollTop=chatContainer.scrollHeight;if(callback)callback();}else if(sender==='ai'){if(useTypingEffect){messageDiv.textContent=text;typeEffect(messageDiv,text,callback)}else{messageDiv.textContent=text;addTimestamp(messageDiv);chatContainer.scrollTop=chatContainer.scrollHeight;if(callback)callback();}}
setTimeout(()=>{chatContainer.scrollTop=chatContainer.scrollHeight},50)}
function enableInputForQuestions(){messageInput.placeholder='Nhập câu hỏi của bạn...';messageInput.disabled=!1;sendButton.disabled=!1;sendButton.title='Gửi câu hỏi';messageInput.focus()}
function enableInputForRetryVerification(){messageInput.placeholder='Mã không đúng. Vui lòng nhập lại Mã cán bộ...';messageInput.disabled=!1;sendButton.disabled=!1;sendButton.title='Gửi Mã cán bộ';messageInput.focus()}
function disableInput(){messageInput.disabled=!0;sendButton.disabled=!0;sendButton.title='Đang xử lý...'}
async function handleSend(){const messageText=messageInput.value.trim();if(!messageText)return;addMessageToChat(messageText,'user');const userMessageToSend=messageInput.value;messageInput.value='';disableInput();loadingIndicator.textContent='Đang xử lý yêu cầu...';loadingIndicator.style.display='block';chatContainer.scrollTop=chatContainer.scrollHeight;if(!isVerified){loadingIndicator.textContent='Đang xác thực Mã cán bộ...';try{const response=await fetch('/verify_employee',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({employee_id:userMessageToSend})});const data=await response.json();loadingIndicator.style.display='none';if(response.ok&&data.status==='success'){isVerified=!0;currentEmployeeId=userMessageToSend;addMessageToChat(data.greeting,'ai',!0,()=>{if(data.file_list&&data.file_list.length>0){let fileListMessage=" Tôi có thể hỗ trợ bạn trên cơ sở nội dung của các văn bản sau:\n";data.file_list.forEach((fileName,index)=>{fileListMessage+=`${index + 1}. ${fileName}\n`});fileListMessage=fileListMessage.trim();fileListMessage+="\n Ngoài ra tôi cũng có thể trả lời các câu hỏi khác như một trợ lý ảo thông minh.";fileListMessage+="\n Xin mời đặt câu hỏi.";addMessageToChat(fileListMessage,'ai',!0,()=>{enableInputForQuestions()})}else{addMessageToChat("Bạn cần hỗ trợ gì tiếp theo?",'ai',!0,()=>{enableInputForQuestions()})}})}else{const errorMessage=data.message||`Lỗi ${response.status}: Không thể xác thực.`;addMessageToChat(errorMessage,'ai',!0,()=>{enableInputForRetryVerification()})}}catch(error){console.error("Lỗi khi gọi /verify_employee:",error);loadingIndicator.style.display='none';addMessageToChat("Lỗi kết nối đến máy chủ xác thực. Vui lòng kiểm tra lại Mã cán bộ và thử lại.",'ai',!0,()=>{enableInputForRetryVerification()})}}else{loadingIndicator.textContent='VIBA AI đang trả lời...';try{const response=await fetch('/ask',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({question:userMessageToSend,employee_id:currentEmployeeId})});loadingIndicator.style.display='none';if(!response.ok){let errorMsg=`Lỗi HTTP: ${response.status}.`;try{const errorData=await response.json();errorMsg+=` ${errorData.error || 'Không có thông tin lỗi chi tiết.'}`}catch(e){}
throw new Error(errorMsg)}
const data=await response.json();if(data.error){throw new Error(data.error)}
addMessageToChat(data.answer||"Xin lỗi, tôi không thể đưa ra câu trả lời vào lúc này.",'ai',!0,()=>{enableInputForQuestions()})}catch(error){console.error("Lỗi khi gọi /ask:",error);loadingIndicator.style.display='none';addMessageToChat(`Đã xảy ra lỗi khi xử lý câu hỏi: ${error.message}. Vui lòng thử lại.`,'ai',!0,()=>{enableInputForQuestions()})}}}
sendButton.addEventListener('click',handleSend);messageInput.addEventListener('keypress',function(event){if(event.key==='Enter'&&!messageInput.disabled){event.preventDefault();handleSend()}});function initializeChat(){console.log("Khởi tạo giao diện chat...");const welcomeMessage=`Xin chào! Tôi là VIBA - Trợ lý ảo thông minh phục vụ cán bộ BIDV Bắc Hải Dương.
Tôi có thể giúp bạn tra cứu văn bản nội bộ, trả lời câu hỏi nghiệp vụ và hỗ trợ thông tin một cách chính xác, nhanh chóng.
Vui lòng nhập Mã cán bộ để bắt đầu.`;addMessageToChat(welcomeMessage,'ai',!1,()=>{messageInput.placeholder='Nhập Mã cán bộ...';messageInput.disabled=!1;sendButton.disabled=!1;sendButton.title='Gửi Mã cán bộ';messageInput.focus();console.log("Giao diện sẵn sàng nhận Mã cán bộ.")})}
document.addEventListener('DOMContentLoaded',initializeChat);</script>